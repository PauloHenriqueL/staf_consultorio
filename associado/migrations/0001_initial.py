# Generated by Django 5.2 on 2025-05-14 21:33

import associado.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('pk_setor', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('setor', models.CharField(max_length=30, verbose_name='Setor')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
            ],
            options={
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
            },
        ),
        migrations.CreateModel(
            name='Associado',
            fields=[
                ('pk_associado', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('telefone', models.CharField(help_text='Exemplo: 31988553344 Não coloque +55/espaços/parênteses', max_length=20, validators=[django.core.validators.RegexValidator(message='Este campo deve conter apenas números.', regex='^\\d+$'), django.core.validators.MinLengthValidator(10, 'Telefone deve ter no mínimo 10 dígitos.')], verbose_name='Telefone')),
                ('cpf', models.CharField(help_text='Exemplo: 12345678901 Não coloque pontos ou traços', max_length=11, validators=[django.core.validators.RegexValidator(message='Este campo deve conter apenas números.', regex='^\\d+$'), django.core.validators.MinLengthValidator(11, 'CPF deve ter 11 dígitos.'), associado.models.validate_cpf], verbose_name='CPF')),
                ('dat_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('endereco', models.CharField(help_text='Formato: rua Japão, 384', max_length=255, validators=[django.core.validators.RegexValidator(message='O endereço deve seguir o formato: rua Nome da Rua, Número', regex='^.+,\\s*\\d+$')], verbose_name='Endereço')),
                ('dif', models.TextField(blank=True, null=True, verbose_name='Diferencias')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('fk_setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Setor', to='associado.setor')),
            ],
            options={
                'verbose_name': 'Associado',
                'verbose_name_plural': 'Associados',
                'ordering': ['nome'],
            },
        ),
    ]
